ðŸ“¦Progetto_LTW
 â”£ ðŸ“‚client      // Cartella di riferimento per i file relativi al client
 â”ƒ â”£ ðŸ“‚public      // Cartella pubblica di riferimento contenente files statici
 â”ƒ â”ƒ â”£ ðŸ“‚assets      // Raccolta degli assets pubblici del progetto
 â”ƒ â”ƒ â”ƒ â”£ ðŸ“‚cards      // Raccolta dei .png delle carte
 â”ƒ â”ƒ â”ƒ â”ƒ â”£ ðŸ“œback_carte.png
 â”ƒ â”ƒ â”ƒ â”ƒ â”— ðŸ“œ...  
 â”ƒ â”ƒ â”ƒ â”— ðŸ“‚images      // Raccolta di immagini utilizzate nel progetto
 â”ƒ â”ƒ â”ƒ â”ƒ â”£ ðŸ“‚avatars      // Immagini profilo
 â”ƒ â”ƒ â”ƒ â”ƒ â”ƒ â”£ ðŸ“œfoto1.png
 â”ƒ â”ƒ â”ƒ â”ƒ â”ƒ â”— ðŸ“œ...
 â”ƒ â”ƒ â”ƒ â”ƒ â”£ ðŸ“‚legend      // Iconografia della pagina "inventario.html"
 â”ƒ â”ƒ â”ƒ â”ƒ â”ƒ â”£ ðŸ“œ3093185.png
 â”ƒ â”ƒ â”ƒ â”ƒ â”ƒ â”— ðŸ“œ...
 â”ƒ â”ƒ â”ƒ â”ƒ â”£ ðŸ“œfavicon.ico      // Icona Sito Web
 â”ƒ â”ƒ â”ƒ â”ƒ â”— ðŸ“œ...      // ( Altre Immagini )
 â”ƒ â”ƒ â”£ ðŸ“‚css      // Raccolta dei fogli di stile e libreria "bootstrap"
 â”ƒ â”ƒ â”ƒ â”£ ðŸ“‚bootstrap          /**************************************
 â”ƒ â”ƒ â”ƒ â”ƒ â”£ ðŸ“‚css              *                                    *
 â”ƒ â”ƒ â”ƒ â”ƒ â”ƒ â”— ðŸ“œ...           *          Files bootstrap           *  
 â”ƒ â”ƒ â”ƒ â”ƒ â”£ ðŸ“‚js               *         salvati in locale          *
 â”ƒ â”ƒ â”ƒ â”ƒ â”ƒ â”— ðŸ“œ...           *                                    *
 â”ƒ â”ƒ â”ƒ â”ƒ â”— ðŸ“œbootstrap        **************************************/
 â”ƒ â”ƒ â”ƒ â”£ ðŸ“œgame.css           /**************************************
 â”ƒ â”ƒ â”ƒ â”£ ðŸ“œhelp.css            *                                    *
 â”ƒ â”ƒ â”ƒ â”£ ðŸ“œindex.css           *                                    *
 â”ƒ â”ƒ â”ƒ â”£ ðŸ“œinventario.css      *          Raccolta degli            *       
 â”ƒ â”ƒ â”ƒ â”£ ðŸ“œleaderboard.css     *            Stylesheets             *
 â”ƒ â”ƒ â”ƒ â”£ ðŸ“œlogin.css           *                                    *
 â”ƒ â”ƒ â”ƒ â”£ ðŸ“œmenu.css            *                                    *
 â”ƒ â”ƒ â”ƒ â”£ ðŸ“œprofile.css         *                                    *
 â”ƒ â”ƒ â”ƒ â”— ðŸ“œtavolo.css          **************************************/
 â”ƒ â”ƒ â”— ðŸ“‚js      // Raccolta degli script lato client
 â”ƒ â”ƒ    â”£ ðŸ“œgame.js      // Script che organizza graficamente il client al tavolo di gioco (in modo che vengano rispettati gli stessi posti per tutti i giocatori) e che si occupa di emettere richieste al server in base agli elementi con cui si interagisce, aspetta una risposta e modifica l'html di conseguenza
 â”ƒ â”ƒ    â”£ ðŸ“œinventario.js      // Si occupa di rendere dinamica la rispettiva pagina html con Vue.js, la quale mostra alcuni dati dell'utente presi dal database al momento del caricamento
 â”ƒ â”ƒ    â”£ ðŸ“œleaderboard.js      // Utilizza Vue.js ed una query a MongoDB per stilare una classifica dei 10 giocatori con i punti esperienza piÃ¹ alti
 â”ƒ â”ƒ    â”£ ðŸ“œlogin.js      // Gestisce gli errori e mostra un feedback all'utente con un popup
 â”ƒ â”ƒ    â”£ ðŸ“œmenu.js      // Gestisce le richieste di reindirizzamento da parte del server, se si inserisce l'ID di un tavolo esistente
 â”ƒ â”ƒ    â”£ ðŸ“œprofile.js      // Rende la pagina profile.html interattiva, gestisce una lista amici, l'immagine del profilo e le statistiche del client in tempo reale
 â”ƒ â”ƒ    â”— ðŸ“œtavolo.js      // Elabora e mostra le informazioni del tavolo a cui il client Ã¨ connesso e ne gestisce una chat privata legata all'ID 
 â”ƒ â”£ ðŸ“œgame.html      // Pagina nel quale viene inizializzata una nuova partita, divisa in griglia, puÃ² contere fino a 8 giocatori, la chat ed uno spazio per la mano di carte
 â”ƒ â”£ ðŸ“œhelp.html      // Pagina di aiuto contenente un form che reinderizza, una volta completato, alla propria casella postale e genera una email compilata in base al contenuto del form
 â”ƒ â”£ ðŸ“œindex.html      // Pagina di benvenuto contenente una breve descrizione del progetto
 â”ƒ â”£ ðŸ“œinventario.html      // Pagina contenente informazioni sulle carte presenti in Kadabra! e la relativa legenda, utile ad introdurre ed abituare il giocatore all'iconografia del gioco
 â”ƒ â”£ ðŸ“œleaderboard.html      // Pagina che mostra i migliori giocatori di Kadabra! in una top 10 (ordinata in ordine decrescente in base ai punti esperienza dei giocatori, guadagnati giocando)
 â”ƒ â”£ ðŸ“œlogin.html      // Pagina di Registrazione e Login dell'utente
 â”ƒ â”£ ðŸ“œmenu.html      // Pagina principale contenente riferimenti utili all'utente per la navigazione delle funzionalitÃ  del progetto
 â”ƒ â”£ ðŸ“œprofile.html      // Pagina che mostra le statistiche del giocatore connesso, la lista degli amici, la lista degli obbiettivi, il collegamento all'inventario ed una minima possibilitÃ  di personalizzazione  
 â”ƒ â”— ðŸ“œtavolo.html      // Pagina di intermezzo tra il menÃ¹ e la partita, una "sala di attesa" dove si puÃ² chattare con i giocatori seduti allo stesso tavolo ed una volta pronti, iniziare la partita
 â”£ ðŸ“‚db_models      // Modelli contenenti la struttura dei dati contenuti nel relativo database
 â”ƒ â”— ðŸ“œuser.js      // Definizione del modello "user" per la collezione di utenti gestita in MongoDB
 â”£ ðŸ“‚node_modules      // Cartella contenente moduli di nodejs richiesti dal server
 â”ƒ â”— ðŸ“œ...
 â”£ ðŸ“‚server      // Cartella di riferimento per i file relativi al client
 â”ƒ â”— ðŸ“‚js      // Raccolta di files javascript con definizioni di classi e funzioni utili al "setup" del gioco che viene gestito dal server
 â”ƒ â”ƒ â”£ ðŸ“œCard.js      // Definizione della classe "Card" alla quale appartengono tutte le carte del gioco create dinamicamente con l'avvio di una partita
 â”ƒ â”ƒ â”£ ðŸ“œcard_list.js      // Simil Json con una lista di oggetti compatibili con la classe "Card", la quale viene importata all'occorrenza per creare una carta da ciascun elemento (Rappresenta nella totalitÃ  il mazzo di gioco).
 â”ƒ â”ƒ â”£ ðŸ“œDeck.js      // Definizione classe "Deck" (Mazzo) e relative funzioni (crea mazzo, mischia, pesca)
 â”ƒ â”ƒ â”£ ðŸ“œGame.js      // Definizione classe "Game" ed un paio funzioni di controllo (facenti riferimento al regolamento del gioco di carte) chiamate dal server durante la partita
 â”ƒ â”ƒ â”£ ðŸ“œPlayer.js      // Definizione classe "Player" della quale verranno create istanze per ogni giocatore connesso ad una partita ed inserite nella lista "giocatori" della classe "Game", per tenere traccia delle statistiche di gioco in tempo reale
 â”ƒ â”ƒ â”£ ðŸ“œsetupper.js      // Funzioni per il setup dei ruoli e per la gestione di regole extra di alcuni personaggi del gioco
 â”ƒ â”ƒ â”£ ðŸ“œTable.js      // Definizione classe "Table" con gli attributi necessari alla gestione di tavoli multipli
 â”ƒ â”ƒ â”— ðŸ“œutility.js      // Funzioni ausiliarie per la gestione dei tavoli e carte
 â”£ ðŸ“œapp.js      // Applicazione server lanciata con nodejs, la quale elabora e risponde a tutte le richieste dei client, in questa vengono gestiti anche dei dati volatili (come tavoli e partite) senza l'ausilio di database esterni
 â”£ ðŸ“œDescrizione Progetto.txt      // Descrizione dei file nella directory del progetto
 â”£ ðŸ“œpackage-lock.json      /* Files con informazioni sul   *
 â”£ ðŸ“œpackage.json            * progetto e le sue dipendenze */       
 â”— ðŸ“œREADME.md      // Readme Github con introduzione discorsiva al progetto